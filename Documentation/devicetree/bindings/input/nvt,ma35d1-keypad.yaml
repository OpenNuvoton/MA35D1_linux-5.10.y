# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/input/ma35d1-keypad.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: NVT MA35D1 Keypad device tree bindings

maintainers:
  - Liu Ying <gnuiyl@gmail.com>

allOf:
  - $ref: "/schemas/input/matrix-keymap.yaml#"

properties:
    compatible:
        - const: nuvoton,ma35d1-kpi

    debounce-period:
        $ref: /schemas/types.yaml#/definitions/uint32
        description: 
            key debounce period select
            0  = 0 clock
            1  = 0 clock
            2  = 0 clock
            3  = 8 clocks
            4  = 16 clocks
            5  = 32 clocks
            6  = 64 clocks
            7  = 128 clocks
            8  = 256 clocks
            9  = 512 clocks
            10 = 1024 clocks
            11 = 2048 clocks
            12 = 4096 clocks
            13 = 8192 clocks

    per-scale:
        $ref: /schemas/types.yaml#/definitions/uint32
        description:
            Row Scan Cycle Pre-scale Value. The number is from 1 to 256.

    per-scalediv:
        $ref: /schemas/types.yaml#/definitions/uint32
        description:
            Per-scale divider. The number is from 1 to 256.

    reg:
        maxItems: 1

    interrupts:
        maxItems: 1

    clocks:
        maxItems: 1

required:
  - compatible
  - reg
  - interrupts
  - clocks
  - linux,keymap
  - debounce-period
  - per-scale
  - per-scalediv

unevaluatedProperties: false

examples:
  - |
    keypad: keypad@404A0000 {
		compatible = "nuvoton,ma35d1-kpi";
		reg = <0x0 0x404A0000 0x0 0x10000>;
		interrupts = <GIC_SPI 79 IRQ_TYPE_LEVEL_HIGH>;
		clocks = <&clk KPI_GATE>;
		keypad,num-rows = <4>;
		keypad,num-columns = <4>;
		linux,keymap = <MATRIX_KEY(0x00, 0x02, KEY_F) /* key_forward */
		MATRIX_KEY(0x00, 0x03, KEY_HOME) /* key_home */
		MATRIX_KEY(0x01, 0x00, KEY_A) /* key_contacts */
		MATRIX_KEY(0x01, 0x01, KEY_1) /* key_1 */
		MATRIX_KEY(0x01, 0x02, KEY_2) /* key_2 */
		MATRIX_KEY(0x01, 0x03, KEY_3) /* key_3 */
		MATRIX_KEY(0x02, 0x00, KEY_P) /* key_phone */
		MATRIX_KEY(0x02, 0x01, KEY_4) /* key_4 */
		MATRIX_KEY(0x02, 0x02, KEY_5) /* key_5 */
		MATRIX_KEY(0x02, 0x03, KEY_6) /* key_6 */
		MATRIX_KEY(0x03, 0x00, KEY_C) /* key_call_log */
		MATRIX_KEY(0x03, 0x01, KEY_7) /* key_7 */
		MATRIX_KEY(0x03, 0x02, KEY_8) /* key_8 */
		MATRIX_KEY(0x03, 0x03, KEY_9) /* key_9 */
		>;

		debounce-period = <1>;
		per-scale = <1>;
		per-scalediv = <24>;

    };
